name: Build and test flake outputs

on:
  push:
  workflow_dispatch:
  workflow_call:
    inputs:
      branch:
        description: Branch name to build on
        default: ""
        required: false
        type: string
    secrets:
      CACHIX_AUTH_TOKEN:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        system:
          - x86_64
        include:
          - nix-command: develop .#default --profile profile
            system: x86_64
          - nix-command: develop .#rust-stable --profile profile
            system: x86_64
          - nix-command: develop .#rust-nightly --profile profile
            system: x86_64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main

      - name: Setup cachix
        uses: cachix/cachix-action@v14
        with:
          name: racci
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Build command (x86_64)
        if: matrix.system == 'x86_64'
        env:
          _system: ${{ matrix.system }}-linux
        run: nix ${{ matrix.nix-command }}

  # TODO
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        system:
          - x86_64
        nix-command:
          - fmt -- --check
          - flake check

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main

      - name: Setup cachix
        uses: cachix/cachix-action@v14
        with:
          name: racci
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Build command (x86_64)
        if: matrix.system == 'x86_64'
        env:
          _system: ${{ matrix.system }}-linux
        run: nix ${{ matrix.nix-command }}

  # TODO
  # cache:
